{"version":3,"sources":["components/Header/Header.jsx","components/Table/Table.jsx","components/FormOrder/FormOrder.jsx","App.js","api/OrdersService.js","index.js"],"names":["Header","react_default","a","createElement","page_header","title","columns","dataIndex","key","pagination","position","TableOrders","_ref","dataSource","rowSelection","table","FormOrder","Form","create","name","onFieldsChange","props","changedFields","onChange","mapPropsToFields","lastName","createFormField","Object","objectSpread","value","firstName","product","quantity","onValuesChange","_","values","console","log","visible","onCancel","onOk","form","okText","getFieldDecorator","validateFields","modal","es_form","layout","Item","label","rules","required","message","input","placeholder","input_number","defaultValue","min","ordersService","_apiBase","url","fetch","res","ok","Error","concat","json","method","data","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","bodyRes","this","getData","id","postData","deleteData","App","state","tableData","modalVisible","modalTitle","operationType","orderId","disabled","fields","type","selectedRowKeys","selectedRows","_this","setState","handleShowModalAdd","handleShowModalEdit","getOrder","then","result","alert","handleShowModalDelete","handleEdit","updateOrder","getAllOrders","handleAdd","addOrder","handleDelete","deleteOrder","handleModalOk","resetFormState","handleModalCancel","handleFormChange","_this2","_this$state","className","components_Header_Header","es_button","onClick","Table","FormOrder_FormOrder","assign","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c3695f3d.chunk.js","sourcesContent":["import React from 'react';\nimport {PageHeader} from \"antd\";\n\nconst Header = () => (\n  <PageHeader title=\"Заказ оборудования\" />\n);\n\nexport default Header;","import React from 'react';\nimport {Table} from \"antd\";\n\nconst columns = [\n    {\n        title: 'ИД',\n        dataIndex: 'id',\n        key: 'id',\n\n    },\n    {\n        title: 'Фамилия',\n        dataIndex: 'lastName',\n        key: 'lastName'\n    },\n    {\n        title: 'Имя',\n        dataIndex: 'firstName',\n        key: 'firstName'\n    },\n    {\n        title: 'Оборудование',\n        dataIndex: 'product',\n        key: 'product'\n    },\n    {\n        title: 'Кол',\n        dataIndex: 'quantity',\n        key: 'quantity'\n    },\n\n];\n\nconst pagination = {position: \"none\"};\n\nconst TableOrders = ({dataSource, rowSelection}) => (\n    <Table dataSource={dataSource} columns={columns} pagination={pagination} rowSelection={rowSelection}/>\n);\n\nexport default TableOrders;","import React from 'react';\nimport {Modal, Form, Input, InputNumber} from 'antd';\n\nconst FormOrder = Form.create(\n    {\n        name: 'form_order',\n        onFieldsChange(props, changedFields) {\n            props.onChange(changedFields);\n        },\n        mapPropsToFields(props) {\n            return {\n                lastName: Form.createFormField({\n                    ...props.lastName,\n                    value: props.lastName.value,\n                }),\n                firstName: Form.createFormField({\n                    ...props.firstName,\n                    value: props.firstName.value,\n                }),\n                product: Form.createFormField({\n                    ...props.product,\n                    value: props.product.value,\n                }),\n                quantity: Form.createFormField({\n                    ...props.quantity,\n                    value: props.quantity.value,\n                }),\n            };\n        },\n        onValuesChange(_, values) {\n            console.log(values);\n        },\n    })(props => {\n\n        const {visible, onCancel, onOk, form, title, okText} = props;\n        const {getFieldDecorator, validateFields} = form;\n        return (\n            <Modal\n                visible={visible}\n                title={title}\n                okText={okText}\n                onCancel={onCancel}\n                onOk={onOk}\n                validateFields={validateFields}\n            >\n                <Form layout=\"vertical\">\n                    <Form.Item label=\"Фамилия\">\n                        {getFieldDecorator('lastName', {\n                            rules: [{required: true, message: 'Пожалуйста заполните поле фамилия'}],\n                        })(<Input placeholder=\"Фамилия\"/>)}\n                    </Form.Item>\n                    <Form.Item label=\"Имя\">\n                        {getFieldDecorator('firstName', {\n                            rules: [{required: true, message: 'Пожалуйста заполните поле имя'}],\n                        })(<Input placeholder=\"Имя\"/>)}\n                    </Form.Item>\n                    <Form.Item label=\"Наименование оборудования\">\n                        {getFieldDecorator('product', {\n                            rules: [{required: true, message: 'Пожалуйста заполните поле наименование оборудования'}],\n                        })(<Input placeholder=\"Наименование оборудования\"/>)}\n                    </Form.Item>\n                    <Form.Item label=\"Количество\">\n                        {getFieldDecorator('quantity', {\n                            rules: [{required: true, message: 'Пожалуйста заполните поле количество'}],\n                        })(<InputNumber defaultValue=\"1\" min=\"1\"/>)}\n                    </Form.Item>\n                </Form>\n\n            </Modal>\n        );\n\n\n    }\n);\n\nexport default FormOrder;","import React from 'react';\nimport Header from './components/Header/Header';\nimport TableOrders from './components/Table/Table';\nimport FormOrder from './components/FormOrder/FormOrder'\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {Button} from \"antd\";\nimport OrdersService from './api/OrdersService'\n\nconst ordersService = new OrdersService();\n\n\nclass App extends React.Component {\n\n    state = {\n        tableData: null,\n        modalVisible: false,\n        modalTitle: '',\n        operationType: '',\n        orderId: null,\n        disabled: false,\n        okText: '',\n        fields: {\n            lastName: {\n                value: null,\n            },\n            firstName: {\n                value: null,\n            },\n            product: {\n                value: null,\n            },\n            quantity: {\n                value: null,\n            },\n        }\n\n    };\n\n    rowSelection = {\n        type: 'radio',\n        onChange: (selectedRowKeys, selectedRows) => {\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n            this.setState({\n                orderId: selectedRows[0].id,\n            })\n        },\n    };\n\n    componentDidMount() {\n        ordersService.getAllOrders()\n            .then(result => {\n                this.setState({tableData: result});\n            });\n    }\n\n    handleShowModalAdd = () => {\n        this.setState({\n            operationType: 'Add',\n            okText: 'Добавить',\n            modalTitle: 'Создать новую заявку на оборудование',\n            modalVisible: true,\n\n        })\n\n    };\n    handleShowModalEdit = () => {\n        if (this.state.orderId === null) {\n            alert(\"Выберите строку в таблице\");\n            return;\n        }\n        ordersService.getOrder(this.state.orderId)\n            .then(result => {\n                this.setState({\n                    fields: {\n                        lastName: {\n                            value: result.lastName\n                        },\n                        firstName: {\n                            value: result.firstName\n                        },\n                        product: {\n                            value: result.product\n                        },\n                        quantity: {\n                            value: result.quantity\n                        }\n\n                    },\n                    operationType: 'Edit',\n                    okText: 'Редактировать',\n                    modalTitle: 'Редактировать заявку на оборудование',\n                    modalVisible: true\n                })\n            })\n\n\n    };\n\n    handleShowModalDelete = () => {\n\n        if (this.state.orderId === null) {\n            alert(\"Выберите строку в таблице\");\n            return;\n        }\n\n        ordersService.getOrder(this.state.orderId)\n            .then(result => {\n                this.setState({\n                    fields: {\n                        lastName: {\n                            value: result.lastName\n                        },\n                        firstName: {\n                            value: result.firstName\n                        },\n                        product: {\n                            value: result.product\n                        },\n                        quantity: {\n                            value: result.quantity\n                        }\n\n                    },\n                    operationType: 'Delete',\n                    okText: 'Удалить',\n                    modalTitle: 'Вы действительно хотите удалить текущую заявку',\n                    modalVisible: true,\n                    disabled: true,\n                })\n            });\n\n    };\n\n    handleEdit = () => {\n        const data = {\n                id: this.state.orderId,\n                lastName: this.state.fields.lastName.value,\n                firstName: this.state.fields.firstName.value,\n                product: this.state.fields.product.value,\n                quantity: this.state.fields.quantity.value,\n            }\n        ;\n        ordersService.updateOrder(data)\n            .then(result => {\n                console.log(result);\n                return ordersService.getAllOrders();\n            })\n            .then(result => {\n                this.setState({tableData: result});\n            });\n\n    };\n\n    handleAdd = () => {\n        const data = {\n                id: null,\n                lastName: this.state.fields.lastName.value,\n                firstName: this.state.fields.firstName.value,\n                product: this.state.fields.product.value,\n                quantity: this.state.fields.quantity.value,\n            }\n        ;\n        ordersService.addOrder(data)\n            .then(result => {\n                console.log(result);\n                return ordersService.getAllOrders()\n            })\n            .then(result => {\n                this.setState({tableData: result});\n            });\n\n    };\n\n    handleDelete = () => {\n        ordersService.deleteOrder(this.state.orderId)\n            .then(result => {\n                console.log(result);\n                return ordersService.getAllOrders()\n            })\n            .then(result => {\n                this.setState({tableData: result});\n            });\n    };\n\n    handleModalOk = () => {\n\n        switch (this.state.operationType) {\n            case \"Add\":\n                this.handleAdd();\n                break;\n            case \"Edit\":\n                this.handleEdit();\n                break;\n            case \"Delete\":\n                this.handleDelete();\n                break;\n            default:\n                break;\n\n        }\n\n        this.resetFormState();\n\n    };\n\n    resetFormState = () => {\n        this.setState({\n            modalVisible: false,\n            operationType: '',\n            disabled: false,\n            fields: {\n                lastName: {\n                    value: null\n                },\n                firstName: {\n                    value: null\n                },\n                product: {\n                    value: null\n                },\n                quantity: {\n                    value: null\n                }\n\n            },\n        })\n    };\n\n    handleModalCancel = () => {\n        this.resetFormState();\n    };\n\n\n    handleFormChange = changedFields => {\n        this.setState(({fields}) => ({\n            fields: {...fields, ...changedFields},\n        }));\n    };\n\n    render() {\n        const {tableData, okText, modalTitle, modalVisible, fields, disabled} = this.state;\n        return (\n            <div className=\"App\">\n                <Header className=\"header\"/>\n                <div className=\"wrapper-buttons\">\n                    <Button type=\"primary\" onClick={this.handleShowModalAdd}\n                            className=\"control-button\">Добавить</Button>\n                    <Button type=\"primary\" onClick={this.handleShowModalEdit}\n                            className=\"control-button\">Редактировать</Button>\n                    <Button type=\"primary\" onClick={this.handleShowModalDelete}\n                            className=\"control-button\">Удалить</Button>\n                </div>\n                <TableOrders dataSource={tableData}\n                             rowSelection={this.rowSelection}/>\n\n                <FormOrder\n                    {...fields}\n                    onChange={this.handleFormChange}\n                    okText={okText}\n                    title={modalTitle}\n                    visible={modalVisible}\n                    onOk={this.handleModalOk}\n                    onCancel={this.handleModalCancel}\n                    disabled={disabled}/>\n\n            </div>\n\n        )\n    }\n\n}\n\nexport default App;\n","class OrdersService {\n    _apiBase = `http://localhost:9966/api/v1/orders`;\n\n    async getData(url) {\n        const res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Ресурсы по адресу ${url} не доступны`);\n        }\n        return await res.json();\n    }\n\n    async postData(url = '', method, data = {}) {\n        const res = await fetch(url, {\n            method: method,\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: JSON.stringify(data),\n        });\n        const bodyRes = await res.json();\n        return bodyRes;\n    }\n\n    async deleteData(url = '') {\n        const res = await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n\n        });\n        return res;\n    }\n\n    async getAllOrders() {\n        const res = await this.getData(`${this._apiBase}/all/`);\n        return res;\n    }\n\n    async getOrder(id) {\n        const res = await this.getData(`${this._apiBase}/get/${id}`);\n        return res;\n    }\n\n    async addOrder(data) {\n        const res = await this.postData(`${this._apiBase}/save/`, \"POST\", data);\n\n        return res;\n\n    }\n\n    async updateOrder(data) {\n        const res = await this.postData(`${this._apiBase}/update/`, \"PUT\", data);\n        return res;\n    }\n\n    async deleteOrder(id) {\n        const res = await this.deleteData(`${this._apiBase}/delete/${id}`);\n        return res;\n    };\n\n\n}\n\nexport default OrdersService;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}