{"version":3,"sources":["components/Header/Header.jsx","components/Table/Table.jsx","components/Form/FormOrders.jsx","App.js","api/OrdersService.js","index.js"],"names":["Header","react_default","a","createElement","page_header","title","columns","dataIndex","key","pagination","position","TableOrders","_ref","dataSource","rowSelection","table","FormOrders","visible","onOk","onCancel","disabled","modal","es_form","layout","Item","label","input","placeholder","required","input_number","defaultValue","min","ordersServiсe","_apiBase","url","config","fetch","res","ok","Error","concat","json","this","getResourse","id","App","state","tableData","modalVisible","modalTitle","operationType","orderId","formData","lastName","firstName","product","quantity","type","onChange","selectedRowKeys","selectedRows","handleShowModalAdd","_this","setState","handleShowModalEdit","handleShowModalDelete","handleModalOk","handleModalCancel","_this2","getAllOrders","then","result","className","components_Header_Header","es_button","onClick","Table","Form_FormOrders","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oRAOeA,EAJA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,MAAM,sHCDdC,EAAU,CACZ,CACID,MAAO,eACPE,UAAW,KACXC,IAAK,MAGT,CACIH,MAAO,6CACPE,UAAW,WACXC,IAAK,YAET,CACIH,MAAO,qBACPE,UAAW,YACXC,IAAK,aAET,CACIH,MAAO,2EACPE,UAAW,UACXC,IAAK,WAET,CACIH,MAAO,qBACPE,UAAW,WACXC,IAAK,aAKPC,EAAa,CAACC,SAAU,QAMfC,EAJK,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,WAAYC,EAAdF,EAAcE,aAAd,OAChBb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOF,WAAYA,EAAYP,QAASA,EAASG,WAAYA,EAAYK,aAAcA,yCCV5EE,EAvBI,SAAAJ,GAAgD,IAA9CK,EAA8CL,EAA9CK,QAASZ,EAAqCO,EAArCP,MAAOa,EAA8BN,EAA9BM,KAAMC,EAAwBP,EAAxBO,SAAUC,EAAcR,EAAdQ,SAEnD,OACInB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOJ,QAASA,EAASZ,MAAOA,EAAOa,KAAMA,EAAMC,SAAUA,GAC3DlB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,OAAO,YACXtB,EAAAC,EAAAC,cAACmB,EAAA,EAAKE,KAAN,CAAWC,MAAM,8CACbxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,YAAY,6CAAUC,UAAQ,EAACR,SAAUA,KAEpDnB,EAAAC,EAAAC,cAACmB,EAAA,EAAKE,KAAN,CAAWC,MAAM,sBACfxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,YAAY,qBAAMC,UAAQ,EAACR,SAAUA,KAE9CnB,EAAAC,EAAAC,cAACmB,EAAA,EAAKE,KAAN,CAAWC,MAAM,4EACfxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,YAAY,2EAAcC,UAAQ,EAACR,SAAUA,KAEtDnB,EAAAC,EAAAC,cAACmB,EAAA,EAAKE,KAAN,CAAWC,MAAM,gEACfxB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAaC,aAAa,IAAIC,IAAI,IAAIH,UAAQ,EAACR,SAAUA,0DCT/DY,EAAgB,qDCRpBC,+IACkBC,EAAKC,yFACHC,MAAMF,cAAlBG,UAEGC,yBACD,IAAIC,MAAJ,gGAAAC,OAA+BN,EAA/B,0FAEKG,EAAII,oTAICC,KAAKC,YAAL,GAAAH,OAAoBE,KAAKT,SAAzB,wBAAZI,2BACCA,sIAGAO,GACP,OAAOF,KAAKC,YAAL,GAAAH,OAAoBE,KAAKT,SAAzB,SAAAO,OAAyCI,cD4FrCC,6MA/FXC,MAAQ,CACJC,UAAW,KACXC,cAAc,EACdC,WAAY,GACZC,cAAe,GACfC,QAAS,KACT/B,UAAU,EACVgC,SAAU,CACNR,GAAI,KACJS,SAAU,KACVC,UAAW,KACXC,QAAS,KACTC,SAAU,SAKlB1C,aAAe,CACX2C,KAAM,QACNC,SAAU,SAACC,EAAiBC,QAYhCC,mBAAqB,WACjBC,EAAKC,SAAS,CACVb,cAAe,MACfD,WAAY,uMACZD,cAAc,OAKtBgB,oBAAsB,WAClBF,EAAKC,SAAS,CACVb,cAAe,OACfD,WAAY,4MACZD,cAAc,OAMtBiB,sBAAwB,WACpBH,EAAKC,SAAS,CACVb,cAAe,SACfD,WAAY,8PACZD,cAAc,EACd5B,UAAU,OAKlB8C,cAAgB,WAEZJ,EAAKC,SAAS,CAACf,cAAc,OAGjCmB,kBAAoB,WAChBL,EAAKC,SAAS,CACVf,cAAc,EACdE,cAAe,yFA5CH,IAAAkB,EAAA1B,KAChBV,EAAcqC,eACTC,KAAK,SAAAC,GACFH,EAAKL,SAAS,CAAChB,UAAWwB,uCA8ClC,OACItE,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,OACXvE,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAQjB,KAAK,UAAUkB,QAASjC,KAAKmB,oBAArC,oDACA5D,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAQjB,KAAK,UAAUkB,QAASjC,KAAKsB,qBAArC,kFACA/D,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAQjB,KAAK,UAAUkB,QAASjC,KAAKuB,uBAArC,8CACAhE,EAAAC,EAAAC,cAACyE,EAAD,CAAa/D,WAAY6B,KAAKI,MAAMC,UACvBjC,aAAc4B,KAAK5B,eAEhCb,EAAAC,EAAAC,cAAC0E,EAAD,CAAYxE,MAAOqC,KAAKI,MAAMG,WAClBhC,QAASyB,KAAKI,MAAME,aACpB9B,KAAMwB,KAAKwB,cACX/C,SAAUuB,KAAKyB,kBACf/C,SAAUsB,KAAKI,MAAM1B,mBAxF/B0D,IAAMC,WENxBC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.deddcf94.chunk.js","sourcesContent":["import React from 'react';\nimport {PageHeader} from \"antd\";\n\nconst Header = () => (\n  <PageHeader title=\"Заказ оборудования\" />\n);\n\nexport default Header;","import React from 'react';\nimport {Table} from \"antd\";\n\nconst columns = [\n    {\n        title: 'ИД',\n        dataIndex: 'id',\n        key: 'id',\n\n    },\n    {\n        title: 'Фамилия',\n        dataIndex: 'lastName',\n        key: 'lastName'\n    },\n    {\n        title: 'Имя',\n        dataIndex: 'firstName',\n        key: 'firstName'\n    },\n    {\n        title: 'Оборудование',\n        dataIndex: 'product',\n        key: 'product'\n    },\n    {\n        title: 'Кол',\n        dataIndex: 'quantity',\n        key: 'quantity'\n    },\n\n];\n\nconst pagination = {position: \"none\"};\n\nconst TableOrders = ({dataSource, rowSelection}) => (\n    <Table dataSource={dataSource} columns={columns} pagination={pagination} rowSelection={rowSelection}/>\n);\n\nexport default TableOrders;","import React from 'react';\nimport {Modal, Form, Input, InputNumber} from \"antd\";\n\nconst FormOrders = ({visible, title, onOk, onCancel, disabled}) => {\n\n  return (\n      <Modal visible={visible} title={title} onOk={onOk} onCancel={onCancel}>\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Фамилия\">\n              <Input placeholder=\"Фамилия\" required disabled={disabled}/>\n          </Form.Item>\n          <Form.Item label=\"Имя\">\n            <Input placeholder=\"Имя\" required disabled={disabled}/>\n          </Form.Item>\n          <Form.Item label=\"Оборудование\">\n            <Input placeholder=\"Оборудование\"required disabled={disabled}/>\n          </Form.Item>\n          <Form.Item label=\"Количество\">\n            <InputNumber defaultValue=\"1\" min=\"1\" required disabled={disabled}/>\n          </Form.Item>\n        </Form>\n      </Modal>\n  );\n\n};\n\nexport default FormOrders;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport TableOrders from './components/Table/Table';\nimport FormOrders from './components/Form/FormOrders'\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {Button} from \"antd\";\nimport OrdersService from './api/OrdersService'\n\nconst ordersServiсe = new OrdersService();\n\n\nclass App extends React.Component {\n\n    state = {\n        tableData: null,\n        modalVisible: false,\n        modalTitle: '',\n        operationType: '',\n        orderId: null,\n        disabled: false,\n        formData: {\n            id: null,\n            lastName: null,\n            firstName: null,\n            product: null,\n            quantity: null,\n        },\n\n    };\n\n    rowSelection = {\n        type: 'radio',\n        onChange: (selectedRowKeys, selectedRows) => {\n\n        }\n    };\n\n    componentDidMount() {\n        ordersServiсe.getAllOrders()\n            .then(result => {\n                this.setState({tableData: result});\n            });\n    }\n\n    handleShowModalAdd = () => {\n        this.setState({\n            operationType: 'Add',\n            modalTitle: 'Создать новую заявку на оборудование',\n            modalVisible: true,\n\n        })\n\n    };\n    handleShowModalEdit = () => {\n        this.setState({\n            operationType: 'Edit',\n            modalTitle: 'Редактировать заявку на оборудование',\n            modalVisible: true,\n\n        })\n\n    };\n\n    handleShowModalDelete = () => {\n        this.setState({\n            operationType: 'Delete',\n            modalTitle: 'Вы действительно хотите удалить текущую заявку',\n            modalVisible: true,\n            disabled: true,\n        })\n\n    };\n\n    handleModalOk = () => {\n\n        this.setState({modalVisible: false})\n    };\n\n    handleModalCancel = () => {\n        this.setState({\n            modalVisible: false,\n            operationType: '',\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <Button type=\"primary\" onClick={this.handleShowModalAdd}>Добавить</Button>\n                <Button type=\"primary\" onClick={this.handleShowModalEdit}>Редактировать</Button>\n                <Button type=\"primary\" onClick={this.handleShowModalDelete}>Удалить</Button>\n                <TableOrders dataSource={this.state.tableData}\n                             rowSelection={this.rowSelection}/>\n\n                <FormOrders title={this.state.modalTitle}\n                            visible={this.state.modalVisible}\n                            onOk={this.handleModalOk}\n                            onCancel={this.handleModalCancel}\n                            disabled={this.state.disabled}/>\n\n            </div>\n\n        )\n    }\n\n}\n\nexport default App;\n","class OrdersService {\n  _apiBase = `http://localhost:9966/api/v1/orders`;\n  async getResourse(url, config) {\n    const res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error(`Ресурсы по адресу ${url} не доступны`);\n    }\n    return await res.json();\n  }\n\n  async getAllOrders() {\n    const res = await this.getResourse(`${this._apiBase}/all/`);\n    return res;\n  }\n\n  getOrder(id) {\n    return this.getResourse(`${this._apiBase}/get/${id}`)\n  }\n}\n\nexport default OrdersService;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}